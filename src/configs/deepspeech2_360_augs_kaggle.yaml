defaults:
  - model: deepspeech2
  - writer: wandb
  - metrics: default
  - datasets: default_360_kaggle
  - dataloader: default
  - transforms: augs
  - _self_

optimizer:
  _target_: torch.optim.AdamW
  lr: 0.0002

lr_scheduler:
  _target_: torch.optim.lr_scheduler.OneCycleLR
  max_lr: 0.0005
  pct_start: 0.2
  steps_per_epoch: ${trainer.epoch_len}
  epochs: ${trainer.n_epochs}
  anneal_strategy: cos

loss_function:
  _target_: src.loss.CTCLossWrapper

text_encoder:
  _target_: src.text_encoder.CTCTextEncoder

trainer:
  log_step: 50
  n_epochs: 200
  epoch_len: 150
  device_tensors: ["spectrogram", "text_encoded"] # which tensors should be on device (ex. GPU)
  resume_from: null # null or path to the checkpoint dir with *.pth and config.yaml
  from_pretrained: null # path to the pretrained model
  device: cuda # device name or "auto"
  override: True # if True, will override the previous run with the same name
  monitor: "min val_loss" # "off" or "max/min metric_name", i.e. our goal is to maximize/minimize metric
  save_period: 5 # checkpoint each save_period epochs in addition to the best epoch
  early_stop: ${trainer.n_epochs} # epochs for early stopping
  save_dir: "deepspeech2_augs_360"
  seed: 1
  max_grad_norm: 8
  # TODO: maybe add max_grad_norm
